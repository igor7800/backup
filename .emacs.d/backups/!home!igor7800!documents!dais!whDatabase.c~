#include <stdio.h>
#include <stdlib.h>
#define WHNUM  5
#define SYSNUM 8

typedef struct
{
  char holeNumber[WHNUM];  //number of wormhole
  int stableTime;          //max lifetime
  float stableMass;        //max stable mass
  float jumMass;           //max jump mass
} wh;

struct  whSystem
{
  char number[SYSNUM];    //wh number
  int  class;             //wh class
  char effect;            //mag,red,pul,wol,cat,bla
  char static1[WHNUM];    //static wormhole
  char static2[WHNUM];    //2d static
  struct whSystem *nextWh;
};

int menu (void)
{
  int selection;
  printf ("Options:\n");
  printf ("1) Add wormhole system\n");
  printf ("2) Delete wormhole system\n");
  printf ("3) Exit\n");
  scanf ("%d",&selection);
  return selection;
}



struct whSystem *addWH (struct whSystem *start)
{
  int numberOfStatics;
  struct whSystem *newWh;
  newWh=(struct whSystem *) malloc(sizeof( struct whSystem));
  newWh->nextWh=start;
  //
  printf ("WH system j number: \n");
  scanf  ("%s",newWh->number);
  //
  printf ("WH system class: \n");
  scanf  ("%d",&newWh->class);
  //
  printf ("WH system effect: \n");
  printf ("Enter 'm' for magnetar\n");
  printf ("Enter 'r' for red giant\n");
  printf ("Enter 'p' for pulsar\n");
  printf ("Enter 'w' for wolf rayet\n");
  printf ("Enter 'c' for cataclysmic variable\n");
  printf ("Enter 'b' for black hole: ");
  scanf  ("%c", (char*)&newWh->class);
  printf ("\n");
  //
  printf ("Enter number of statics: \n");
  scanf ("%d", &numberOfStatics);
  switch (numberOfStatics=1)
  {
    case 1:
      printf ("Enter static wormhole number: \n");
      scanf ("%s",newWh->static1);
      break;
      
    case 2:
      printf ("Enter first static wormhole number\n");  
      scanf ("%s",newWh->static1);      
      printf ("Enter 2d static wormhole number\n");  
      scanf ("%s",newWh->static2);      
      break;
      
    default:
      printf ("Wormhole can't have more then 2 statics\n");
      break;          
  }
  return newWh;
}

int main (int argc, char *argv[])
{
  struct whSystem *newWh;
  int i =0;
  while(i!=3)
  {
  i = menu();
  if (i==1) newWh=addWH(newWh);
  }
  return 0;
}

