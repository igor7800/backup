#include <stdio.h>
#include <stdlib.h>
#include <alsa/asoundlib.h>
#include <math.h>    

#define PCM_DEVICE "plughw:0,0"
#define PI 3.14159265
 
int main (int argc, char *argv[])
{
  int i;
  int err;
  float buf[10000];
  snd_pcm_t *playback_handle;
  snd_pcm_hw_params_t *hw_params;
 
  float freq = atoi(argv[1]);
  if ((err = snd_pcm_open (&playback_handle, PCM_DEVICE, SND_PCM_STREAM_PLAYBACK, 0)) < 0) {
    fprintf (stderr, "cannot open audio device %s (%s)\n",
	     PCM_DEVICE,
	     snd_strerror (err));
    exit (1);
  }
 
  if ((err = snd_pcm_hw_params_malloc (&hw_params)) < 0) {
    fprintf (stderr, "cannot allocate hardware parameter structure (%s)\n",
	     snd_strerror (err));
    exit (1);
  }
 
  if ((err = snd_pcm_hw_params_any (playback_handle, hw_params)) < 0) {
    fprintf (stderr, "cannot initialize hardware parameter structure (%s)\n",
	     snd_strerror (err));
    exit (1);
  }
 
  if ((err = snd_pcm_hw_params_set_access (playback_handle, hw_params, SND_PCM_ACCESS_RW_INTERLEAVED)) < 0) {
    fprintf (stderr, "cannot set access type (%s)\n",
	     snd_strerror (err));
    exit (1);
  }
 
  if ((err = snd_pcm_hw_params_set_format (playback_handle, hw_params, SND_PCM_FORMAT_S16_LE)) < 0) {
    fprintf (stderr, "cannot set sample format (%s)\n",
	     snd_strerror (err));
    exit (1);
  }
 
  int rate = 44100;
  if ((err = snd_pcm_hw_params_set_rate_resample (playback_handle, hw_params, rate)) < 0) {
    fprintf (stderr, "cannot set sample rate (%s)\n",snd_strerror (err));
    exit (1);
  }
 
  if ((err = snd_pcm_hw_params_set_channels (playback_handle, hw_params, 2)) < 0) {
    fprintf (stderr, "cannot set channel count (%s)\n",
	     snd_strerror (err));
    exit (1);
  }
 
  if ((err = snd_pcm_hw_params (playback_handle, hw_params)) < 0) {
    fprintf (stderr, "cannot set parameters (%s)\n",
	     snd_strerror (err));
    exit (1);
  }
 
  snd_pcm_hw_params_free (hw_params);
 
  if ((err = snd_pcm_prepare (playback_handle)) < 0) {
    fprintf (stderr, "cannot prepare audio interface for use (%s)\n",
	     snd_strerror (err));
    exit (1);
  }
 

  for(i = 0; i < 10000; i++)
    {
      // i is the sample index
      // Straight sine function means one cycle every 2*pi samples:
      //  buf[i] = sin(i); 
      // Multiply by 2*pi--now it's one cycle per sample:
      // buf[i] = sin((2 * PI) * i); 
      // Multiply by 1,000 samples per second--now it's 1,000 cycles per second:
      // buffer[i] = sin(1000 * (2 * pi) * i);
      // Divide by 44,100 samples per second--now it's 1,000 cycles per 44,100
      // samples, which is just what we needed:
      buf[i] = sin(freq  * (2 * PI) * i / 44100);
      printf ("%f\n",buf[i]);
    }

  while(1) {
    if ((err = snd_pcm_writei (playback_handle, buf ,1000) != 100)) {
      fprintf (stderr, "write to audio interface failed (%s)\n",
	       snd_strerror (err));
      exit (1);
    }
  }
 
  snd_pcm_close (playback_handle);
  exit (0);
}

